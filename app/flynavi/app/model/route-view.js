// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  define(['fastdom', 'jquerymx'], function(fastdom) {
    var _this = this;
    return $.Model('MapRouteView', {
      defaults: {
        tmcIndexRate: 3.6,
        widthLightBar: 0.95,
        tmcContainer: $('#route_tmc'),
        normalContainer: $('#route_normal'),
        tmcTrafficIndex: $('#tmc_traffic_index'),
        tmcDistance: $('#tmc_distance'),
        tmcTimeEle: $('#tmc_time'),
        normalTrafficIndex: $('#normal_traffic_index'),
        normalDistance: $('#normal_distance'),
        normalTimeEle: $('#normal_time'),
        trafficIndice: {
          green: 'images/green.png',
          yellow: 'images/yellow.png',
          red: 'images/red.png'
        }
      }
    }, {
      init: function(config) {
        if (typeof config === 'undefined') {
          return;
        }
        this.normalRouteLength = config.normalRouteLength;
        this.normalTime = config.normalTime;
        this.tmcRouteLength = config.tmcRouteLength;
        this.tmcTime = config.tmcTime < config.normalTime ? config.tmcTime : config.normalTime;
        this.arrTmcTraffic = config.arrTmcTraffic;
        this.arrNormalTraffic = config.arrNormalTraffic;
        return this.arrTrafficCol = config.arrTrafficCol;
      },
      drawLight: function(arrTraffic, container, length) {
        var $p, totalLength;
        if (container.find('p').length !== 0) {
          container.find('p').remove();
        }
        totalLength = container.width() - 2;
        $p = $('<p/>').css({
          'max-width': totalLength
        }).addClass('light_bar full_light_bar');
        $.each(arrTraffic[0], function(i, n) {
          var color, len;
          len = Math.round(n / length * totalLength);
          color = this.arrTrafficCol[arrTraffic[1][i]];
          return $('<blockquote/>').css({
            width: len,
            backgroundColor: color
          }).addClass('light_bar_seg').appendTo($p);
        });
        return $p.appendTo(container);
      },
      displayData: function() {
        this.setUi();
        this.displayTmcData();
        return this.displayNormalData();
      },
      setUi: function() {
        var $path_info, scaleBtn, tmcBtn;
        $path_info = $('#path_info');
        scaleBtn = fastdom.read(function() {
          return fastdom.write(function() {
            var top1, top2;
            top1 = $path_info.position().top - 57;
            top2 = $path_info.position().top - 94;
            $('#zoom_out').css('top', top1);
            $('#zoom_in').css('top', top2);
            return fastdom.clear(scaleBtn);
          });
        });
        return tmcBtn = fastdom.write(function() {
          $('#tmc_btn').hide();
          $('#navi').hide();
          $path_info.css({
            'visibility': 'visible'
          });
          return fastdom.clear(tmcBtn);
        });
      },
      getTrafficIndiceBg: function(trafficInd) {
        return 'url(' + this.trafficIndice[this.getTrafficIndiceCol(trafficInd)] + ')';
      },
      displayTmcData: function(lenTime) {
        var _this = this;
        return fastdom.write(function() {
          var trafficInd;
          _this.tmcDistance.text(util_common.unit_conversion(_this.tmcRouteLength) + '千米');
          _this.tmcTimeEle.text(util_common.formatMinute(_this.tmcTime));
          trafficInd = _this.getTrafficInd(_this.getSpeed(_this.tmcRouteLength, _this.tmcTime));
          _this.tmcTrafficIndex.text(trafficInd).css('background-image', _this.getTrafficIndiceBg(trafficInd));
          if (_this.normalTime - _this.tmcTime > 0) {
            return $('#save_time').html("<blockquote class='save_time_txt'>省时<blockquote id='save_time_number'>" + (_this.normalTime - _this.tmcTime) + "</blockquote>分钟</blockquote>");
          } else {
            return $('#save_time').html("飞路快推荐路线");
          }
        });
      },
      displayNormalData: function() {
        var _this = this;
        return fastdom.write(function() {
          var trafficInd;
          _this.normalDistance.text(util_common.unit_conversion(_this.normalRouteLength) + '千米');
          _this.normalTimeEle.text(util_common.formatMinute(_this.normalTime));
          trafficInd = _this.getTrafficInd(_this.getSpeed(_this.normalRouteLength, _this.normalTime));
          return _this.normalTrafficIndex.text(trafficInd).css('background-image', _this.getTrafficIndiceBg(trafficInd));
        });
      },
      getSpeed: function(length, time) {
        return length / (time * 60) * this.tmcIndexRate;
      },
      getTrafficInd: function(speed) {
        if (speed > 0 && speed <= 10) {
          return 1;
        } else if (speed > 10 && speed <= 15) {
          return 2;
        } else if (speed > 15 && speed <= 20) {
          return 3;
        } else if (speed > 20 && speed <= 25) {
          return 4;
        } else if (speed > 25 && speed <= 30) {
          return 5;
        } else if (speed > 30 && speed <= 40) {
          return 6;
        } else if (speed > 40 && speed <= 50) {
          return 7;
        } else if (speed > 50 && speed <= 60) {
          return 8;
        } else if (speed > 60 && speed <= 80) {
          return 9;
        } else if (speed > 80) {
          return 10;
        }
      },
      getTrafficIndiceCol: function(index) {
        if (index > 0 && index <= 3) {
          return 'red';
        } else if (index > 3 && index <= 6) {
          return 'yellow';
        } else if (index > 6 && index <= 10) {
          return 'green';
        } else {
          return 0;
        }
      }
    });
  });

}).call(this);

/*
//@ sourceMappingURL=route-view.map
*/
